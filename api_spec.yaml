openapi: 3.0.0
info:
  title: API de Produtos, Categorias e Tags
  version: 1.0.0
  description: API para gerenciamento de produtos, categorias e tags.
servers:
  - url: http://localhost:8081
    description: Servidor local
paths:
  /products:
    get:
      summary: Listar todos os produtos
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Criar um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                category_id:
                  type: integer
              required:
                - name
                - description
                - price
                - category_id
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/{product_id}:
    get:
      summary: Obter detalhes de um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do produto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      summary: Atualizar um produto (substituição completa)
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                category_id:
                  type: integer
                likes:
                  type: integer
              required:
                - name
                - description
                - price
                - category_id
                - likes
      responses:
        '200':
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    patch:
      summary: Atualizar parcialmente um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                category_id:
                  type: integer
                likes:
                  type: integer
      responses:
        '200':
          description: Produto atualizado parcialmente com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      summary: Excluir um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Produto excluído com sucesso
  /products/{product_id}/tags:
    get:
      summary: Listar tags de um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de tags do produto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
  /products/{product_id}/tags/{tag_id}:
    post:
      summary: Adicionar uma tag a um produto
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Tag adicionada ao produto com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /categories:
    get:
      summary: Listar todas as categorias
      responses:
        '200':
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: Criar uma nova categoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Categoria criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /categories/{category_id}:
    get:
      summary: Obter detalhes de uma categoria
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da categoria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    put:
      summary: Atualizar uma categoria (substituição completa)
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: Categoria atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    patch:
      summary: Atualizar parcialmente uma categoria
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Categoria atualizada parcialmente com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      summary: Excluir uma categoria
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Categoria excluída com sucesso
  /categories/{category_id}/products:
    get:
      summary: Listar produtos de uma categoria
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de produtos da categoria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /tags:
    get:
      summary: Listar todas as tags
      responses:
        '200':
          description: Lista de tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
    post:
      summary: Criar uma nova tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Tag criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
  /tags/{tag_id}:
    get:
      summary: Obter detalhes de uma tag
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
    put:
      summary: Atualizar uma tag (substituição completa)
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: Tag atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
    patch:
      summary: Atualizar parcialmente uma tag
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Tag atualizada parcialmente com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
    delete:
      summary: Excluir uma tag
      parameters:
        - name: tag_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Tag excluída com sucesso
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        category_id:
          type: integer
        likes:
          type: integer
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string